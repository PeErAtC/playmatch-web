import React, { useState, useRef } from "react";
import Head from "next/head";
import Navbar from "./components/navbar";
import { useInView } from "react-intersection-observer";
import { ChevronDown } from "lucide-react";

// URL ‡∏Ç‡∏≠‡∏á Line Official Account
const LINE_OA_URL = "https://page.line.me/136rjkgt";

const packageData = [
  {
    name: "‡∏Å‡πä‡∏ß‡∏ô‡πÄ‡∏•‡πá‡∏Å",
    description: "‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡πä‡∏ß‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô, ‡∏Å‡πä‡∏ß‡∏ô‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏£‡∏±‡∏ß",
    features: [
      "‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏Å‡πä‡∏ß‡∏ô‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î 40 ‡∏Ñ‡∏ô",
      "‡∏à‡∏±‡∏î Match ‡πÑ‡∏î‡πâ‡πÑ‡∏°‡πà‡πÄ‡∏Å‡∏¥‡∏ô 30 Match ‡∏ï‡πà‡∏≠‡πÄ‡∏î‡∏∑‡∏≠‡∏ô",
      "‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô Match",
      "‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡πÅ‡∏Ç‡πà‡∏á‡∏Ç‡∏±‡∏ô",
      "‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô",
    ],
    monthlyPrice: "149",
    yearlyPrice: "1,490",
    yearlyDiscountText: "‡∏õ‡∏£‡∏∞‡∏´‡∏¢‡∏±‡∏î‡∏Å‡∏ß‡πà‡∏≤ 188 ‡∏ö‡∏≤‡∏ó/‡∏õ‡∏µ",
    buttonText: "‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÄ‡∏•‡∏¢",
    isPopular: false,
    buttonVariant: "primary-outline",
  },
  {
    name: "‡∏Å‡πä‡∏ß‡∏ô‡∏°‡∏≤‡∏ï‡∏£‡∏ê‡∏≤‡∏ô",
    description: "‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡πä‡∏ß‡∏ô‡∏õ‡∏£‡∏∞‡∏à‡∏≥, ‡∏ä‡∏°‡∏£‡∏°‡∏Ç‡∏ô‡∏≤‡∏î‡∏Å‡∏•‡∏≤‡∏á",
    features: [
      "‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏Å‡πä‡∏ß‡∏ô‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î 100 ‡∏Ñ‡∏ô",
      "‡∏à‡∏±‡∏î Match ‡πÑ‡∏î‡πâ‡πÑ‡∏°‡πà‡πÄ‡∏Å‡∏¥‡∏ô 70 Match ‡∏ï‡πà‡∏≠‡πÄ‡∏î‡∏∑‡∏≠‡∏ô",
      "‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÅ‡∏•‡∏∞‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô Match",
      "‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡πÅ‡∏Ç‡πà‡∏á‡∏Ç‡∏±‡∏ô‡∏Ç‡∏±‡πâ‡∏ô‡∏™‡∏π‡∏á",
      "‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡πÅ‡∏•‡∏∞‡∏Å‡∏£‡∏≤‡∏ü‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå",
      "‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏±‡∏î‡∏≠‡∏±‡∏ô‡∏î‡∏±‡∏ö‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å (Ranking)",
    ],
    monthlyPrice: "299",
    yearlyPrice: "2,990",
    yearlyDiscountText: "‡∏õ‡∏£‡∏∞‡∏´‡∏¢‡∏±‡∏î‡∏Å‡∏ß‡πà‡∏≤ 588 ‡∏ö‡∏≤‡∏ó/‡∏õ‡∏µ",
    buttonText: "‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÅ‡∏û‡πá‡∏Å‡πÄ‡∏Å‡∏à‡∏ô‡∏µ‡πâ!",
    isPopular: true,
    buttonVariant: "primary-filled",
  },
  {
    name: "‡∏Å‡πä‡∏ß‡∏ô‡πÉ‡∏´‡∏ç‡πà/‡∏û‡∏£‡∏µ‡πÄ‡∏°‡∏µ‡∏¢‡∏°",
    description: "‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ä‡∏°‡∏£‡∏°‡∏Ç‡∏ô‡∏≤‡∏î‡πÉ‡∏´‡∏ç‡πà, ‡∏ú‡∏π‡πâ‡∏à‡∏±‡∏î‡∏õ‡∏£‡∏∞‡∏à‡∏≥",
    features: [
      "‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏Å‡πä‡∏ß‡∏ô‡πÑ‡∏°‡πà‡∏à‡∏≥‡∏Å‡∏±‡∏î",
      "‡∏à‡∏±‡∏î Match ‡πÑ‡∏°‡πà‡∏à‡∏≥‡∏Å‡∏±‡∏î (‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î)",
      "‡∏ú‡∏π‡πâ‡∏ä‡πà‡∏ß‡∏¢‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤",
      "‡∏õ‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏á‡πÅ‡∏≠‡∏õ‡∏ï‡∏≤‡∏°‡πÅ‡∏ö‡∏£‡∏ô‡∏î‡πå‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì",
      "‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ API (Custom Integration)",
      "‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏û‡∏¥‡πÄ‡∏®‡∏©‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏°‡∏á‡∏≤‡∏ô PlayMatch Exclusive",
    ],
    monthlyPrice: "599",
    yearlyPrice: "5,990",
    yearlyDiscountText: "‡∏õ‡∏£‡∏∞‡∏´‡∏¢‡∏±‡∏î‡∏Å‡∏ß‡πà‡∏≤ 1,188 ‡∏ö‡∏≤‡∏ó/‡∏õ‡∏µ",
    buttonText: "‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏ó‡∏µ‡∏°‡∏á‡∏≤‡∏ô",
    isPopular: false,
    buttonVariant: "primary-outline",
  },
];

const faqData = [
  {
    question: "‡πÅ‡∏û‡πá‡∏Å‡πÄ‡∏Å‡∏à‡∏£‡∏≤‡∏¢‡∏õ‡∏µ‡∏Ñ‡∏∏‡πâ‡∏°‡∏Ñ‡πà‡∏≤‡∏Å‡∏ß‡πà‡∏≤‡πÅ‡∏û‡πá‡∏Å‡πÄ‡∏Å‡∏à‡∏£‡∏≤‡∏¢‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÑ‡∏£?",
    answer:
      "‡πÅ‡∏û‡πá‡∏Å‡πÄ‡∏Å‡∏à‡∏£‡∏≤‡∏¢‡∏õ‡∏µ‡∏à‡∏∞‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î‡∏û‡∏¥‡πÄ‡∏®‡∏© ‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö‡πÄ‡∏ó‡πà‡∏≤‡∏Å‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏ü‡∏£‡∏µ 1-2 ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö‡∏Å‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡∏£‡∏≤‡∏¢‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏Ñ‡∏£‡∏±‡∏ö",
  },
  {
    question:
      "‡∏´‡∏≤‡∏Å‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏Å‡πä‡∏ß‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡∏à‡∏≥‡∏ô‡∏ß‡∏ô Match ‡πÄ‡∏Å‡∏¥‡∏ô‡∏Å‡∏ß‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏£‡∏∞‡∏ö‡∏∏‡πÉ‡∏ô‡πÅ‡∏û‡πá‡∏Å‡πÄ‡∏Å‡∏à ‡∏à‡∏∞‡πÄ‡∏Å‡∏¥‡∏î‡∏≠‡∏∞‡πÑ‡∏£‡∏Ç‡∏∂‡πâ‡∏ô?",
    answer:
      "‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏∞‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÅ‡∏•‡∏∞‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÉ‡∏´‡πâ‡∏ó‡πà‡∏≤‡∏ô‡∏û‡∏¥‡∏à‡∏≤‡∏£‡∏ì‡∏≤‡∏≠‡∏±‡∏õ‡πÄ‡∏Å‡∏£‡∏î‡πÅ‡∏û‡πá‡∏Å‡πÄ‡∏Å‡∏à‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏ï‡πà‡∏≠‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡πÑ‡∏î‡πâ‡πÑ‡∏°‡πà‡∏™‡∏∞‡∏î‡∏∏‡∏î",
  },
  {
    question: "‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏û‡πá‡∏Å‡πÄ‡∏Å‡∏à‡πÑ‡∏î‡πâ‡πÉ‡∏ô‡∏†‡∏≤‡∏¢‡∏´‡∏•‡∏±‡∏á‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?",
    answer:
      "‡∏ó‡πà‡∏≤‡∏ô‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏≠‡∏±‡∏õ‡πÄ‡∏Å‡∏£‡∏î‡πÅ‡∏û‡πá‡∏Å‡πÄ‡∏Å‡∏à‡πÑ‡∏î‡πâ‡∏ï‡∏•‡∏≠‡∏î‡πÄ‡∏ß‡∏•‡∏≤ ‡πÇ‡∏î‡∏¢‡∏™‡πà‡∏ß‡∏ô‡∏ï‡πà‡∏≤‡∏á‡∏Ç‡∏≠‡∏á‡∏Ñ‡πà‡∏≤‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡∏õ‡∏£‡∏±‡∏ö‡∏ï‡∏≤‡∏°‡∏™‡∏±‡∏î‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏∑‡∏≠ ‡∏´‡∏≤‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÄ‡∏Å‡∏£‡∏î‡πÅ‡∏û‡πá‡∏Å‡πÄ‡∏Å‡∏à ‡∏à‡∏∞‡∏°‡∏µ‡∏ú‡∏•‡πÉ‡∏ô‡∏£‡∏≠‡∏ö‡∏ö‡∏¥‡∏•‡∏ñ‡∏±‡∏î‡πÑ‡∏õ",
  },
  {
    question: "‡∏°‡∏µ‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡πÅ‡∏ö‡∏ö‡πÉ‡∏î‡∏ö‡πâ‡∏≤‡∏á?",
    answer:
      "‡πÄ‡∏£‡∏≤‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡∏ú‡πà‡∏≤‡∏ô‡∏ö‡∏±‡∏ï‡∏£‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï/‡πÄ‡∏î‡∏ö‡∏¥‡∏ï, ‡∏Å‡∏≤‡∏£‡πÇ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡∏ú‡πà‡∏≤‡∏ô‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£, ‡πÅ‡∏•‡∏∞‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÄ‡∏û‡∏¢‡πå",
  },
  {
    question: "‡∏´‡∏≤‡∏Å‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÅ‡∏û‡πá‡∏Å‡πÄ‡∏Å‡∏à ‡∏à‡∏∞‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏Ç‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡πÑ‡∏î‡πâ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÑ‡∏£?",
    answer:
      "‡∏ó‡πà‡∏≤‡∏ô‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏ó‡∏µ‡∏°‡∏á‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á‡πÄ‡∏£‡∏≤‡πÑ‡∏î‡πâ‡∏ú‡πà‡∏≤‡∏ô‡∏ó‡∏≤‡∏á‡∏≠‡∏µ‡πÄ‡∏°‡∏• support@playmatch.com ‡∏´‡∏£‡∏∑‡∏≠‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå 0xx-xxx-xxxx ‡πÉ‡∏ô‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏≥‡∏Å‡∏≤‡∏£",
  },
];

// Component ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö FAQ Item ‡πÅ‡∏ö‡∏ö Expand/Collapse
const FAQItem = ({ question, answer, index }) => {
  const [isOpen, setIsOpen] = useState(false);
  const { ref, inView } = useInView({
    triggerOnce: true, // Trigger animation only once
    threshold: 0.1, // Element is 10% visible
    delay: index * 100, // Delay animation based on index
  });

  return (
    <div
      ref={ref}
      style={{
        ...styles.faqItem,
        opacity: inView ? 1 : 0,
        transform: inView ? "translateY(0)" : "translateY(20px)",
        transitionDelay: `${index * 0.1}s`, // Stagger delay for FAQ items
      }}
    >
      <button
        style={styles.faqQuestionButton}
        onClick={() => setIsOpen(!isOpen)}
      >
        <h4 style={styles.faqQuestion}>{question}</h4>
        <ChevronDown
          size={24}
          style={{
            ...styles.faqIcon,
            transform: isOpen ? "rotate(180deg)" : "rotate(0deg)",
          }}
        />
      </button>
      {isOpen && <p style={styles.faqAnswer}>{answer}</p>}
    </div>
  );
};

function Packages() {
  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏õ‡∏¥‡∏î Line OA
  const handleButtonClick = () => {
    window.open(LINE_OA_URL, "_blank"); // ‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ô‡πÅ‡∏ó‡πá‡∏ö‡πÉ‡∏´‡∏°‡πà
  };

  return (
    <div style={styles.container}>
      <Head>
        <title>‡πÅ‡∏û‡πá‡∏Å‡πÄ‡∏Å‡∏à‡∏Å‡∏≤‡∏£‡∏™‡∏°‡∏±‡∏Ñ‡∏£ - PlayMatch</title>
        <meta
          name="description"
          content="‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÅ‡∏û‡πá‡∏Å‡πÄ‡∏Å‡∏à PlayMatch ‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏Å‡∏±‡∏ö‡∏Ñ‡∏∏‡∏ì"
        />
      </Head>

      <Navbar />

      <main style={styles.main}>
        <section style={styles.heroSection}>
          <h1 style={styles.heroTitle}>
            ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å <span style={styles.heroTitleHighlight}>‡πÅ‡∏û‡πá‡∏Å‡πÄ‡∏Å‡∏à</span> ‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πà
            ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö <span style={styles.heroTitleHighlight}>PlayMatch</span>{" "}
            ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì
          </h1>
          <p style={styles.heroSubtitle}>
            ‡∏û‡∏ö‡∏Å‡∏±‡∏ö‡πÅ‡∏û‡πá‡∏Å‡πÄ‡∏Å‡∏à‡∏´‡∏•‡∏≤‡∏Å‡∏´‡∏•‡∏≤‡∏¢‡∏ó‡∏µ‡πà‡∏≠‡∏≠‡∏Å‡πÅ‡∏ö‡∏ö‡∏°‡∏≤‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ï‡∏≠‡∏ö‡∏™‡∏ô‡∏≠‡∏á‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Ç‡∏≠‡∏á‡∏Å‡πä‡∏ß‡∏ô‡πÅ‡∏•‡∏∞‡∏ä‡∏°‡∏£‡∏°‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì
          </p>
        </section>

        <section style={styles.pricingSection}>
          <div style={styles.pricingGrid}>
            {packageData.map((pkg, index) => {
              const { ref, inView } = useInView({
                triggerOnce: true,
                threshold: 0.2,
              });

              return (
                <div
                  key={index}
                  ref={ref}
                  style={{
                    ...styles.packageCard,
                    ...(pkg.isPopular ? styles.popularPackage : {}),
                    opacity: inView ? 1 : 0,
                    transform: inView ? "translateY(0)" : "translateY(50px)",
                    transition: `opacity 0.6s ease-out ${
                      index * 0.15
                    }s, transform 0.6s ease-out ${index * 0.15}s`,
                  }}
                >
                  {pkg.isPopular && (
                    <div style={styles.popularBadge}>üëë ‡∏¢‡∏≠‡∏î‡∏ô‡∏¥‡∏¢‡∏°</div>
                  )}
                  <h3 style={styles.packageTitle}>{pkg.name}</h3>
                  <p style={styles.packageDescription}>{pkg.description}</p>
                  <div style={styles.priceContainer}>
                    <div style={styles.monthlyPrice}>
                      <span style={styles.priceCurrency}>‡∏ø</span>
                      <span style={styles.priceValue}>{pkg.monthlyPrice}</span>
                      <span style={styles.priceUnit}>/‡πÄ‡∏î‡∏∑‡∏≠‡∏ô</span>
                    </div>
                    <div style={styles.yearlyPrice}>
                      ‡∏´‡∏£‡∏∑‡∏≠{" "}
                      <span style={styles.yearlyPriceValue}>
                        ‡∏ø{pkg.yearlyPrice}
                      </span>
                      /‡∏õ‡∏µ
                      <p style={styles.discountText}>
                        {pkg.yearlyDiscountText}
                      </p>
                    </div>
                  </div>
                  <ul style={styles.featureList}>
                    {pkg.features.map((feature, i) => (
                      <li key={i} style={styles.featureItem}>
                        ‚úîÔ∏è {feature}
                      </li>
                    ))}
                  </ul>
                  <button
                    style={
                      pkg.buttonVariant === "primary-filled"
                        ? styles.selectButtonFilled
                        : styles.selectButtonOutline
                    }
                    onClick={handleButtonClick} // ‡πÄ‡∏û‡∏¥‡πà‡∏° onClick handler ‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà
                  >
                    {pkg.buttonText}
                  </button>
                </div>
              );
            })}
          </div>
        </section>

        <section style={styles.faqSection}>
          <h2 style={styles.faqTitle}>‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏û‡∏ö‡∏ö‡πà‡∏≠‡∏¢</h2>
          <div style={styles.faqGrid}>
            {faqData.map((faq, index) => (
              <FAQItem
                key={index}
                question={faq.question}
                answer={faq.answer}
                index={index}
              />
            ))}
          </div>
        </section>
      </main>

      {/* <Footer /> */}
    </div>
  );
}

// Inline Styles (‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÄ‡∏î‡∏¥‡∏°‡∏à‡∏≤‡∏Å‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô‡∏Å‡πà‡∏≠‡∏ô‡∏´‡∏ô‡πâ‡∏≤)
const styles = {
  container: {
    fontFamily: '"Kanit", sans-serif',
    backgroundColor: "#f0f8ff",
    minHeight: "100vh",
    display: "flex",
    flexDirection: "column",
    overflowX: "hidden",
  },
  main: {
    flex: 1,
    paddingTop: "75px",
    paddingBottom: "40px",
  },
  heroSection: {
    background: "#1c315e",
    color: "#fff",
    padding: "80px 20px 60px",
    textAlign: "center",
    marginBottom: "50px",
    position: "relative",
    overflow: "hidden",
  },
  heroTitle: {
    fontSize: "3.2rem",
    fontWeight: "700",
    marginBottom: "20px",
    lineHeight: "1.3",
    textShadow: "0 3px 6px rgba(0,0,0,0.4)",
  },
  heroTitleHighlight: {
    color: "#64b5f6",
  },
  heroSubtitle: {
    fontSize: "1.3rem",
    maxWidth: "800px",
    margin: "0 auto",
    opacity: 0.9,
  },
  heroIllustration: {
    maxWidth: "400px",
    height: "auto",
    marginTop: "40px",
    filter: "drop-shadow(0 5px 15px rgba(0,0,0,0.3))",
  },
  pricingSection: {
    padding: "20px",
  },
  pricingGrid: {
    display: "grid",
    gridTemplateColumns: "repeat(auto-fit, minmax(300px, 1fr))",
    gap: "35px",
    maxWidth: "1200px",
    margin: "0 auto",
    alignItems: "stretch",
  },
  packageCard: {
    backgroundColor: "#fff",
    borderRadius: "12px",
    boxShadow: "0 6px 20px rgba(0, 0, 0, 0.12)",
    padding: "35px",
    textAlign: "center",
    display: "flex",
    flexDirection: "column",
    alignItems: "center",
    transition: "transform 0.3s ease-in-out, box-shadow 0.3s ease-in-out",
    cursor: "pointer", // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÉ‡∏´‡πâ‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏ß‡πà‡∏≤‡∏°‡∏µ cursor pointer
  },
  "packageCard:hover": {
    transform: "translateY(-8px)",
    boxShadow: "0 12px 28px rgba(0, 0, 0, 0.2)",
  },
  popularPackage: {
    border: "3px solid #64b5f6",
    transform: "scale(1.04)",
    boxShadow: "0 10px 25px rgba(0, 0, 0, 0.2)",
    zIndex: 2,
  },
  popularBadge: {
    position: "absolute",
    top: "0px",
    right: "0px",
    backgroundColor: "#64b5f6",
    color: "#fff",
    padding: "8px 18px",
    borderRadius: "0 12px 0 12px",
    fontWeight: "700",
    fontSize: "0.95rem",
    letterSpacing: "0.05em",
    boxShadow: "0 2px 8px rgba(0,0,0,0.2)",
  },
  packageTitle: {
    fontSize: "2.1rem",
    fontWeight: "700",
    color: "#1c315e",
    marginBottom: "10px",
  },
  packageDescription: {
    color: "#546e7a",
    marginBottom: "20px",
    minHeight: "50px",
  },
  priceContainer: {
    marginBottom: "25px",
    display: "flex",
    flexDirection: "column",
    alignItems: "center",
  },
  monthlyPrice: {
    display: "flex",
    alignItems: "flex-end",
    color: "#1c315e",
    marginBottom: "5px",
  },
  priceCurrency: {
    fontSize: "1.6rem",
    fontWeight: "600",
    marginRight: "5px",
  },
  priceValue: {
    fontSize: "3.2rem",
    fontWeight: "800",
    lineHeight: "1",
  },
  priceUnit: {
    fontSize: "1.1rem",
    marginLeft: "5px",
    color: "#546e7a",
  },
  yearlyPrice: {
    fontSize: "1rem",
    color: "#546e7a",
    fontWeight: "500",
  },
  yearlyPriceValue: {
    fontWeight: "700",
    color: "#1c315e",
  },
  discountText: {
    fontSize: "0.9rem",
    color: "#2e7d32",
    fontWeight: "600",
    marginTop: "5px",
  },
  featureList: {
    listStyle: "none",
    padding: 0,
    marginBottom: "25px",
    width: "100%",
  },
  featureItem: {
    padding: "10px 20px",
    color: "#37474f",
    borderBottom: "1px solid #eceff1",
    textAlign: "left",
    display: "flex",
    alignItems: "center",
    gap: "10px",
    fontSize: "0.95rem",
  },
  "featureItem:last-child": {
    borderBottom: "none",
  },
  selectButtonFilled: {
    background: "#64b5f6",
    color: "#fff",
    border: "none",
    padding: "14px 35px",
    borderRadius: "30px",
    cursor: "pointer", // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÉ‡∏´‡πâ‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏ß‡πà‡∏≤‡∏°‡∏µ cursor pointer
    fontSize: "1.05rem",
    fontWeight: "600",
    letterSpacing: "0.03em",
    boxShadow: "0 4px 10px rgba(100, 181, 246, 0.4)",
    transition: "all 0.3s ease",
    marginTop: "auto",
    minWidth: "180px",
  },
  "selectButtonFilled:hover": {
    backgroundColor: "#42a5f5",
    boxShadow: "0 6px 15px rgba(100, 181, 246, 0.6)",
    transform: "translateY(-2px)",
  },
  selectButtonOutline: {
    background: "none",
    color: "#64b5f6",
    border: "2px solid #64b5f6",
    padding: "12px 33px",
    borderRadius: "30px",
    cursor: "pointer", // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÉ‡∏´‡πâ‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏ß‡πà‡∏≤‡∏°‡∏µ cursor pointer
    fontSize: "1.05rem",
    fontWeight: "600",
    letterSpacing: "0.03em",
    transition: "all 0.3s ease",
    marginTop: "auto",
    minWidth: "180px",
  },
  "selectButtonOutline:hover": {
    background: "#64b5f6",
    color: "#fff",
    boxShadow: "0 4px 10px rgba(100, 181, 246, 0.4)",
    transform: "translateY(-2px)",
  },

  // FAQ Section Styles
  faqSection: {
    backgroundColor: "#fff",
    padding: "60px 20px",
    textAlign: "center",
    marginTop: "50px",
    boxShadow: "0 -2px 10px rgba(0, 0, 0, 0.05)",
  },
  faqTitle: {
    fontSize: "2.4rem",
    fontWeight: "700",
    color: "#1c315e",
    marginBottom: "40px",
  },
  faqGrid: {
    display: "flex",
    flexDirection: "column",
    gap: "15px",
    maxWidth: "900px",
    margin: "0 auto",
    textAlign: "left",
  },
  faqItem: {
    backgroundColor: "#f9fbfd",
    borderRadius: "10px",
    border: "1px solid #e0f2f7",
    boxShadow: "0 2px 8px rgba(0, 0, 0, 0.05)",
    overflow: "hidden",
    transition: "opacity 0.5s ease-out, transform 0.5s ease-out",
    opacity: 0,
    transform: "translateY(20px)",
  },
  faqQuestionButton: {
    display: "flex",
    justifyContent: "space-between",
    alignItems: "center",
    width: "100%",
    padding: "20px 25px",
    backgroundColor: "transparent",
    border: "none",
    cursor: "pointer",
    textAlign: "left",
  },
  faqQuestion: {
    fontSize: "1.1rem",
    fontWeight: "600",
    color: "#1c315e",
    margin: 0,
  },
  faqIcon: {
    color: "#64b5f6",
    transition: "transform 0.3s ease",
  },
  faqAnswer: {
    padding: "10px 25px 20px",
    color: "#546e7a",
    lineHeight: "1.7",
    fontSize: "0.95rem",
    backgroundColor: "#eff7fd",
    borderTop: "1px solid #e0f2f7",
  },
  // Responsive adjustments
  "@media (max-width: 768px)": {
    heroTitle: {
      fontSize: "2.5rem",
    },
    heroSubtitle: {
      fontSize: "1.1rem",
    },
    packageCard: {
      padding: "25px",
    },
    priceValue: {
      fontSize: "2.8rem",
    },
    selectButtonFilled: {
      padding: "10px 25px",
      fontSize: "0.95rem",
    },
    selectButtonOutline: {
      padding: "8px 23px",
      fontSize: "0.95rem",
    },
    faqTitle: {
      fontSize: "2rem",
    },
    faqQuestion: {
      fontSize: "1rem",
    },
    faqAnswer: {
      fontSize: "0.9rem",
    },
  },
  "@media (max-width: 480px)": {
    heroTitle: {
      fontSize: "2rem",
    },
    packageCard: {
      padding: "20px",
    },
    priceValue: {
      fontSize: "2.5rem",
    },
  },
};

export default Packages;
